// <auto-generated />
using LibraLibrium.Services.Profile.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LibraLibrium.Services.Profile.API.Infrastructure.Migrations
{
    [DbContext(typeof(ProfileContext))]
    [Migration("20230905160304_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("badgeseq", "profile")
                .IncrementsBy(10);

            modelBuilder.HasSequence("profileseq", "profile")
                .IncrementsBy(10);

            modelBuilder.Entity("LibraLibrium.Services.Profile.Domain.AggregateModels.BadgeAggregate.Badge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "badgeseq", "profile");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasDefaultValue("[Badge Description]");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasDefaultValue("[Badge Name]");

                    b.Property<int>("_typeId")
                        .HasColumnType("integer")
                        .HasColumnName("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("_typeId");

                    b.ToTable("Badges", "profile");
                });

            modelBuilder.Entity("LibraLibrium.Services.Profile.Domain.AggregateModels.BadgeAggregate.BadgeType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("BadgeType", "profile");
                });

            modelBuilder.Entity("LibraLibrium.Services.Profile.Domain.AggregateModels.ProfileAggregate.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "profileseq", "profile");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Identity")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<float>("Rating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0.5f);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("Profiles", "profile");
                });

            modelBuilder.Entity("ProfileBadges", b =>
                {
                    b.Property<int>("BadgesId")
                        .HasColumnType("integer");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("BadgesId", "UserProfileId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("ProfileBadges", "profile");
                });

            modelBuilder.Entity("LibraLibrium.Services.Profile.Domain.AggregateModels.BadgeAggregate.Badge", b =>
                {
                    b.HasOne("LibraLibrium.Services.Profile.Domain.AggregateModels.BadgeAggregate.BadgeType", "Type")
                        .WithMany()
                        .HasForeignKey("_typeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ProfileBadges", b =>
                {
                    b.HasOne("LibraLibrium.Services.Profile.Domain.AggregateModels.BadgeAggregate.Badge", null)
                        .WithMany()
                        .HasForeignKey("BadgesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraLibrium.Services.Profile.Domain.AggregateModels.ProfileAggregate.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
