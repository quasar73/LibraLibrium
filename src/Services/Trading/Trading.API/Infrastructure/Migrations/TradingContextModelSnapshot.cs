// <auto-generated />
using System;
using LibraLibrium.Services.Trading.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LibraLibrium.Services.Trading.API.Infrastructure.Migrations
{
    [DbContext(typeof(TradingContext))]
    partial class TradingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("entryseq", "trading")
                .IncrementsBy(10);

            modelBuilder.Entity("LibraLibrium.Services.Trading.Domain.AggregateModels.BookAggregate.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BookId"));

                    b.Property<string>("_ownerId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("OwnerId");

                    b.HasKey("BookId");

                    b.ToTable("Books", "trading");
                });

            modelBuilder.Entity("LibraLibrium.Services.Trading.Domain.AggregateModels.TradeAggregate.EntryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EntryType");
                });

            modelBuilder.Entity("LibraLibrium.Services.Trading.Domain.AggregateModels.TradeAggregate.Trade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "entryseq", "trading");

                    b.Property<bool>("AcceptedByReceiver")
                        .HasColumnType("boolean");

                    b.Property<bool>("AcceptedBySender")
                        .HasColumnType("boolean");

                    b.Property<bool>("Closed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ClosedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("GenerationClosed")
                        .HasColumnType("boolean");

                    b.Property<string>("_receiverId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ReceiverId");

                    b.Property<string>("_senderId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("SenderId");

                    b.HasKey("Id");

                    b.ToTable("Trades", "trading");
                });

            modelBuilder.Entity("LibraLibrium.Services.Trading.Domain.AggregateModels.TradeAggregate.TradeEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "entryseq", "trading");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Generation")
                        .HasColumnType("integer");

                    b.Property<int>("TradeId")
                        .HasColumnType("integer");

                    b.Property<int>("_bookId")
                        .HasColumnType("integer")
                        .HasColumnName("BookId");

                    b.Property<string>("_traderId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("TraderId");

                    b.Property<int>("_typeId")
                        .HasColumnType("integer")
                        .HasColumnName("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TradeId");

                    b.HasIndex("_bookId");

                    b.HasIndex("_typeId");

                    b.ToTable("Entries", "trading");
                });

            modelBuilder.Entity("LibraLibrium.Services.Trading.Domain.AggregateModels.TradeAggregate.TradeEntry", b =>
                {
                    b.HasOne("LibraLibrium.Services.Trading.Domain.AggregateModels.TradeAggregate.Trade", null)
                        .WithMany("Entries")
                        .HasForeignKey("TradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraLibrium.Services.Trading.Domain.AggregateModels.BookAggregate.Book", null)
                        .WithMany()
                        .HasForeignKey("_bookId");

                    b.HasOne("LibraLibrium.Services.Trading.Domain.AggregateModels.TradeAggregate.EntryType", "Type")
                        .WithMany()
                        .HasForeignKey("_typeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("LibraLibrium.Services.Trading.Domain.AggregateModels.TradeAggregate.Trade", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
